name: Local AI Remodeler (Ollama + Aider)

on:
  issue_comment:
    types: [created]
  workflow_dispatch:
    inputs:
      task:
        description: "Describe la remodelación a realizar"
        required: false
        default: ""

permissions:
  contents: write
  pull-requests: write
  issues: read

jobs:
  remodel:
    runs-on: self-hosted  # Tu runner de Windows
    if: >
      github.event_name == 'workflow_dispatch' ||
      (github.event_name == 'issue_comment' &&
       (contains(github.event.comment.body, '/remodel') || contains(github.event.comment.body, '/refactor')))
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Ensure Ollama is running (Windows)
        shell: pwsh
        run: |
          if (-not (Get-Process -Name "ollama" -ErrorAction SilentlyContinue)) {
            Start-Process -FilePath "ollama" -ArgumentList "serve" -NoNewWindow
            Start-Sleep -Seconds 3
          }
          try { ollama list } catch { Write-Host "Ollama no en PATH, asegúralo en el runner." }
          try { ollama pull qwen2.5-coder:7b } catch { }

      - name: Ensure Aider is available (Windows)
        shell: pwsh
        run: |
          if (-not (Get-Command aider -ErrorAction SilentlyContinue)) {
            py -m pip install --user aider-chat==0.59.1
            echo "$env:USERPROFILE\AppData\Roaming\Python\Python311\Scripts" | Out-File -FilePath $env:GITHUB_PATH -Append
          }
          aider --version

      - name: Run Local Remodel (PowerShell)
        shell: pwsh
        env:
          INPUT_TASK: ${{ github.event.inputs.task }}
          COMMENT: ${{ github.event.comment.body }}
        run: |
          if (-not (Test-Path "tools/local-remodel.ps1")) {
            Write-Host "ERROR: Falta tools/local-remodel.ps1"
            exit 1
          }
          powershell -ExecutionPolicy Bypass -File tools/local-remodel.ps1
